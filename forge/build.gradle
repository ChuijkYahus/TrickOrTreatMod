plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig  "hauntedharvest-common.mixins.json"
        mixinConfig  "hauntedharvest.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


processResources {
    inputs.property "version", project.version
    //inputs.property "mod_name": project.getArchivesBaseName()

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
        expand "mod_name": project.getArchivesBaseName()
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

task updateJson {
    file('update.json').withWriter { w ->
        file('update_template.json').eachLine { line ->
            w << line.replaceAll("version", project.version) + System.getProperty("line.separator")
        }
        w.close()
    }
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}


repositories{
    // Built mods
    flatDir {
        dirs "mods"
    }
    mavenCentral()

    maven { url "https://maven.jaackson.me" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url "https://modmaven.k-4u.nl" }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }


    implementation 'org.jetbrains:annotations:22.0.0'

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"))
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'

    modCompileOnly("curse.maven:serene-seasons-291874:4502525")
    modImplementation("net.mehvahdjukaar:moonlight-forge:${project.moonlight_version}")
    modCompileOnly("net.mehvahdjukaar:supplementaries:${project.supplementaries_version}")

    modCompileOnly("org.violetmoon.quark:Quark-4.0-beta-431.3254")

    modCompileOnly("com.teamabnormals:autumnity:1.19.2-4.0.0")
    modCompileOnly("com.teamabnormals:blueprint:1.19.2-6.1.0")

    //modCompileOnly("curse.maven:incubation-361718:3906687")
    //modCompileOnly("com.teamabnormals:boatload:1.19-4.0.0")

    /// modImplementation("curse.maven:quark-243121:4366541")
    modCompileOnly("curse.maven:farmers-delight-398521:3999157")
    //modImplementation("curse.maven:jei-238222:3928388")
    modCompileOnly ("curse.maven:configured-457570:4011355")

}
